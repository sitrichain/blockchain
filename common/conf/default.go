package conf

import (
	"time"

	docker "github.com/fsouza/go-dockerclient"

	"github.com/rongzer/blockchain/common/bccsp/factory"
)

// V 全局默认配置
var V = v{
	TLS: TLS{
		Enabled:           false,
		PrivateKey:        "tls/server.key",
		Certificate:       "tls/server.crt",
		RootCAs:           []string{"tls/ca.crt"},
		ClientAuthEnabled: false,
		ClientRootCAs:     []string{},
	},
	Profile: Profile{
		Enabled: false,
		Address: "0.0.0.0:6060",
	},
	LogPath:        "/var/rongzer/blockchain/logs/",
	LogLevel:       "INFO",
	FileSystemPath: "/var/rongzer/blockchain",
	BCCSP: &factory.FactoryOpts{
		ProviderName: "SW",
		SwOpts: &factory.SwOpts{
			SecLevel:      256,
			HashFamily:    "SHA2",
			Ephemeral:     true,
			FileKeystore:  nil,
			DummyKeystore: nil,
		},
		Pkcs11Opts: nil,
	},
	AttachServerAddress: "http://0.0.0.0:8880",
	Ledger: Ledger{
		Location:      "/var/rongzer/blockchain",
		Temp:          "rongzer-blockchain-ordererledger",
		StateDatabase: "rocksdb",
		RocksDB: RocksDB{
			MaxBackgroundCompactions:         8,
			MaxBackgroundFlushes:             10,
			BytesPerSync:                     1048576,
			BytesPerSecond:                   104857600,
			StatsDumpPeriodSec:               600,
			MaxOpenFiles:                     40960,
			CreateIfMissing:                  true,
			Level0StopWritesTrigger:          36,
			HardPendingCompactionBytesLimit:  137438953472,
			Level0SlowdownWritesTrigger:      24,
			NumLevels:                        7,
			Level0FileNumCompactionTrigger:   4,
			MaxBytesForLevelBase:             1073741824,
			MaxBytesForLevelMultiplier:       10.0,
			TargetFileSizeBase:               107374182,
			TargetFileSizeMultiplier:         10,
			LevelCompactionDynamicLevelBytes: false,
			WriteBufferSize:                  134217728,
			MaxWriteBufferNumber:             20,
			MinWriteBufferNumberToMerge:      2,
		},
		EnableHistoryDatabase: true,
	},
	Sealer: Sealer{
		ListenAddress:                  "0.0.0.0:7050",
		CaAddress:                      "http://0.0.0.0:7054",
		GenesisFile:                    "rbcorderer.block",
		WhiteList:                      "",
		BlackList:                      "",
		EndorseLimitPerPeer:            500,
		SystemChainId:                  "testchainid",
		ParticipateConsensusOfSysChain: false,
		Raft: Raft{
			TickInterval:            500 * time.Millisecond,
			ElectionTick:            10,
			HeartbeatTick:           1,
			MaxInflightBlocks:       5,
			SnapshotIntervalSize:    16 * 1024 * 1024,
			WALDir:                  "/var/rongzer/blockchain/raftWal",
			SnapDir:                 "/var/rongzer/blockchain/raftSnap",
			EvictionSuspicion:       "",
			EndPoint:                "0.0.0.0:7050",
			BootStrapEndPoint:       "",
			DialTimeout:             5 * time.Second,
			RPCTimeout:              7 * time.Second,
			ReplicationBufferSize:   20 * 1024 * 1024,
			ReplicationPullTimeout:  5 * time.Second,
			ReplicationRetryTimeout: 5 * time.Second,
			ReplicationMaxRetries:   3,
		},
	},
	Peer: Peer{
		ListenAddress:     "0.0.0.0:7051",
		ID:                "rongzer",
		NetworkId:         "dev",
		AddressAutoDetect: false,
		Endpoint:          "0.0.0.0:7051",
		Events: Events{
			Address:    "0.0.0.0:7053",
			BufferSize: 5000,
			Timeout:    time.Millisecond * 1000,
		},
		EndorserBufferSize: 5000,
		ProcessEndorserNum: 50,
		VM: VM{
			Endpoint: "unix:///var/run/docker.sock",
			TLS: TLS{
				Enabled:           false,
				PrivateKey:        "docker/tls.key",
				Certificate:       "docker/tls.crt",
				RootCAs:           []string{"docker/ca.crt"},
				ClientAuthEnabled: false,
				ClientRootCAs:     nil,
			},
			AttachStdout:     false,
			ImageTag:         ":lastest",
			Hub:              "",
			MemorySwappiness: 0,
			OOMKillDisable:   false,
			HostConfig: &docker.HostConfig{
				Binds:             nil,
				CapAdd:            []string{},
				CapDrop:           []string{},
				Capabilities:      []string{},
				GroupAdd:          []string{},
				ContainerIDFile:   "",
				LxcConf:           nil,
				PortBindings:      nil,
				Links:             []string{},
				DNS:               []string{},
				DNSOptions:        []string{},
				DNSSearch:         []string{},
				ExtraHosts:        []string{},
				VolumesFrom:       []string{},
				UsernsMode:        "",
				NetworkMode:       "host",
				IpcMode:           "",
				Isolation:         "",
				ConsoleSize:       [2]int{},
				PidMode:           "",
				UTSMode:           "",
				RestartPolicy:     docker.RestartPolicy{},
				Devices:           []docker.Device{},
				DeviceCgroupRules: []string{},
				LogConfig: docker.LogConfig{
					Type: "json-file",
					Config: map[string]string{
						"max-size": "50m",
						"max-file": "5",
					},
				},
				SecurityOpt:          []string{},
				CgroupnsMode:         "",
				Cgroup:               "",
				CgroupParent:         "",
				Memory:               2147483648,
				MemoryReservation:    0,
				KernelMemory:         0,
				MemorySwap:           0,
				CPUShares:            0,
				CPUSet:               "",
				CPUSetCPUs:           "",
				CPUSetMEMs:           "",
				CPUQuota:             0,
				CPUPeriod:            0,
				CPURealtimePeriod:    0,
				CPURealtimeRuntime:   0,
				BlkioWeight:          0,
				BlkioWeightDevice:    []docker.BlockWeight{},
				BlkioDeviceReadBps:   []docker.BlockLimit{},
				BlkioDeviceReadIOps:  []docker.BlockLimit{},
				BlkioDeviceWriteBps:  []docker.BlockLimit{},
				BlkioDeviceWriteIOps: []docker.BlockLimit{},
				Ulimits:              []docker.ULimit{},
				VolumeDriver:         "",
				OomScoreAdj:          0,
				MemorySwappiness:     nil,
				PidsLimit:            nil,
				OOMKillDisable:       nil,
				ShmSize:              0,
				Tmpfs:                nil,
				StorageOpt:           nil,
				Sysctls:              nil,
				CPUCount:             0,
				CPUPercent:           0,
				IOMaximumBandwidth:   0,
				IOMaximumIOps:        0,
				Mounts:               []docker.HostMount{},
				MaskedPaths:          []string{},
				ReadonlyPaths:        []string{},
				Runtime:              "",
				Init:                 false,
				Privileged:           false,
				PublishAllPorts:      false,
				ReadonlyRootfs:       false,
				AutoRemove:           false,
			},
		},
		Chaincode: Chaincode{
			ListenAddress:  "",
			PeerAddress:    "",
			Name:           "",
			Path:           "",
			JavaDockerfile: "from $(DOCKER_NS)/blockchain-javaenv:$(GIT_VERSION)",
			CarRuntime:     "$(BASE_DOCKER_NS)/blockchain-baseos:$(ARCH)-$(BASE_VERSION)",
			GolangRuntime:  "$(BASE_DOCKER_NS)/blockchain-baseos:$(ARCH)-$(BASE_VERSION)",
			Startuptimeout: time.Second * 300,
			Executetimeout: time.Second * 300,
			Mode:           "net",
			Keepalive:      0,
			EnableCSCC:     true,
			EnableLSCC:     true,
			EnableESCC:     true,
			EnableVSCC:     true,
			EnableQSCC:     true,
			WhiteList:      []string{"cscc", "lscc", "escc", "vscc", "qscc"},
		},
		IsLight: false,
	},
}
